<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.universe.backend.database.mapper.EngineMapper">
    <select id="getEngineByName" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Engine">
        select * from environment where project_id = #{projectId} and name = #{name} and `status`=1
    </select>
    <insert id="saveEngine" parameterType="com.universe.backend.database.domain.Engine">
        insert into engine (id, name, `type`, secret, status, project_id, create_time, update_time, create_user, update_user)
        values (#{id}, #{name}, #{type}, #{secret}, #{status}, #{projectId}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>
    <delete id="deleteEngine" parameterType="java.lang.String">
        delete from engine where id = #{id}
    </delete>
    <select id="getEngineList" parameterType="com.universe.backend.request.QueryRequest" resultType="com.universe.backend.database.domain.Engine">
        select eng.*
        from engine eng
        where (eng.project_id = #{projectId} or eng.type = 'system')
        <if test="condition != null and condition != ''">
            and eng.name like #{condition}
        </if>
        order by eng.type desc, eng.create_time desc
    </select>
    <select id="getEngineDetail" parameterType="java.lang.String" resultType="com.universe.backend.dto.EngineDTO">
        select * from engine where id = #{id}
    </select>
    <update id="updateHeartbeat">
        update engine set last_heartbeat_time=#{time} where id =#{id}
    </update>
    <update id="updateStatus" parameterType="com.universe.backend.database.domain.Engine">
        update engine set status=#{status} where id =#{id}
    </update>
    <select id="getEngineById" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Engine">
        select * from engine where id = #{id}
    </select>
    <update id="updateOfflineEngine" parameterType="java.lang.Long">
        update engine set status='offline' where last_heartbeat_time &lt; #{minLastHeartbeatTime} and status !='offline'
    </update>
    <select id="getAllEngines" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Engine">
        select id, name from engine where project_id = #{projectId} and `type` = 'custom' and status != 'offline'
    </select>
</mapper>
