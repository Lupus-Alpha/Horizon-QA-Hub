<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.universe.backend.database.mapper.EnvironmentMapper">
    <select id="getEnvironmentByName" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Environment">
        select * from environment where project_id = #{projectId} and name = #{name} and `status`=1
    </select>
    <insert id="saveEnvironment" parameterType="com.universe.backend.database.domain.Environment">
        insert into `environment` (id, name, description, project_id, create_time, update_time, create_user, update_user)
        values (#{id}, #{name}, #{description}, #{projectId}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
        ON DUPLICATE KEY UPDATE
        update_time = #{updateTime}, update_user = #{updateUser}
        <if test="name != null and name != ''">
            ,name = #{name}
        </if>
        <if test="description != null and description != ''">
            ,description = #{description}
        </if>
    </insert>
    <select id="getEnvironmentDetail" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Environment">
        select id, name from environment where environment_id = #{environmentId} and `status`=1
    </select>
    <select id="getEnvironmentList" parameterType="com.universe.backend.request.QueryRequest" resultType="com.universe.backend.database.domain.Environment">
        select *
        from environment env
        where env.project_id = #{projectId}
        <if test="condition != null and condition != ''">
            and env.name like #{condition}
        </if>
        and env.`status`=1
        order by env.update_time desc
    </select>
    <update id="deleteEnvironment" parameterType="java.lang.String">
        update `environment` set `status`=0 where id = #{id}
    </update>
    <select id="getAllEnvironment" parameterType="java.lang.String" resultType="com.universe.backend.database.domain.Environment">
        select id, name from environment where project_id = #{projectId} and `status`=1
    </select>

</mapper>
